#include <iostream>
#include <vector>
#include <map>
#include <string>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <algorithm>
#include <cstdio>

using namespace std;

//水题n<=1000
//还可以直接用一个vector存储结果
const int maxn = 1010;
struct node {
    string name;
    string password;
} stu[maxn];
int flag[maxn];
int n, m = 0;

int main() {
    scanf("%d", &n);
    fill(flag, flag + maxn, -1);
    for (int i = 0; i < n; ++i) {
        cin >> stu[i].name >> stu[i].password;
        for (int j = 0; j < stu[i].password.size(); ++j) {
            char ch = stu[i].password[j];
            if (ch == '1') {
                stu[i].password[j] = '@';
                flag[m] = i;
            } else if (ch == '0') {
                stu[i].password[j] = '%';
                flag[m] = i;
            } else if (ch == 'l') {
                stu[i].password[j] = 'L';
                flag[m] = i;
            } else if (ch == 'O') {
                stu[i].password[j] = 'o';
                flag[m] = i;
            }
        }
        if (flag[m] != -1) {
            m++;
        }
    }

    if (m != 0) {
        printf("%d\n",m);
        for (int i = 0; i < m; ++i) {
            cout << stu[flag[i]].name << " " << stu[flag[i]].password << endl;
        }
    }
    if (m == 0 && n == 1) {
        printf("There is 1 account and no account is modified");
    }
    if (m == 0 && n != 1) {
        printf("There are %d accounts and no account is modified", n);
    }
    return 0;
}


